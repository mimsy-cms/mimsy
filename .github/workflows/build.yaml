name: Build

on:
  pull_request:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write

jobs:
  changes:
    name: Detect changes
    runs-on: ubuntu-latest
    outputs:
      landing: ${{ steps.changes.outputs.landing }}
      api: ${{ steps.changes.outputs.api }}
      web: ${{ steps.changes.outputs.web }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            landing:
              - 'landing/**'
            api:
              - 'api/**'
            web:
              - 'web/**'

  test-api:
    runs-on: ubuntu-latest
    needs: [changes]
    if: needs.changes.outputs.api == 'true'
    defaults:
      run:
        working-directory: api
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"

      - name: Install dependencies
        run: go get .

      - name: Run tests
        run: go test ./...

  build-landing:
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.landing == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate metadata
        uses: docker/metadata-action@v5
        id: metadata
        with:
          images: ghcr.io/mimsy-cms/landing
          tags: latest

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push docker
        uses: docker/build-push-action@v6
        with:
          context: landing
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          cache-from: type=gha,scope=ghcr.io/mimsy-cms/landing
          cache-to: type=gha,scope=ghcr.io/mimsy-cms/landing,mode=max

  build-web:
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.web == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate metadata
        uses: docker/metadata-action@v5
        id: metadata
        with:
          images: ghcr.io/mimsy-cms/web
          tags: latest

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push docker
        uses: docker/build-push-action@v6
        with:
          context: web
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          cache-from: type=gha,scope=ghcr.io/mimsy-cms/web
          cache-to: type=gha,scope=ghcr.io/mimsy-cms/web,mode=max

  build-api:
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.api == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate metadata
        uses: docker/metadata-action@v5
        id: metadata
        with:
          images: ghcr.io/mimsy-cms/api
          tags: latest

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push docker
        uses: docker/build-push-action@v6
        with:
          context: api
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          cache-from: type=gha,scope=ghcr.io/mimsy-cms/api
          cache-to: type=gha,scope=ghcr.io/mimsy-cms/api,mode=max

  build-status:
    name: Build status
    runs-on: ubuntu-latest
    needs: [changes, test-api, build-landing, build-web, build-api]
    if: always()
    steps:
      - name: Report status
        run: |
          if [ "${{ needs.changes.outputs.landing }}" == 'true' ] && [ "${{ needs.build-landing.result }}" != 'success' ]; then
            exit 1;
          fi

          if [ "${{ needs.changes.outputs.web }}" == 'true' ] && [ "${{ needs.build-web.result }}" != 'success' ]; then
            exit 1;
          fi

          if [ "${{ needs.changes.outputs.api }}" == 'true' ] && [ "${{ needs.test-api.result }}" != 'success' ] && [ "${{ needs.build-api.result }}" != 'success' ]; then
            exit 1;
          fi
